@startuml

openjfx.org.Application <|== InvManager
InvManager o-- SceneManager

SceneManager o-- MainWindowController
SceneManager o-- InventoryModel
SceneManager o-- AddItemWindowController
SceneManager o-- EditItemWindowController
SceneManager o-- SearchItemWindowController
InventoryModel *-- InventoryItem
MainWindowController  o-- FileManager
AddItemWindowController o-- VerifyInput
EditItemWindowController o-- VerifyInput

Class InvManager {
    main()
    start()
}
Class SceneManager {
    main: Stage
    popup: Stage
    mainController: MainWindowController
    model: InventoryModel

    loadAddWindow()
    loadEditWindow(String, String, String)
    loadSearchWindow()
    loadScene(String, Scene)
    closeScene()
    closeMain()
}
Class MainWindowController {
    scenes: SceneManager
    model: InventoryModel
    files: FileManager

    table: TableView
    valueColumn: tableColumn
    serialColumn: tableColumn
    nameColumn: tableColumn
    editButton: Button
    removeButton: Button
    clearSearchButton: Button

    initialize()
    AddItemButtonClicked()
    EditItemButtonClicked()
    RemoveItemButtonClicked()
    SearchButtonClicked()
    SaveAsButtonClicked()
    LoadButtonClicked()
    CloseButtonClicked()
    refreshTable()
    tableClicked()
    ClearSearchButtonClicked()
}
Class AddItemWindowController {
    scenes: SceneManager
    verify: VerifyInput
    nameBox: TextField
    serialBox: TextField
    valueBox: TextField
    errorText: Text

    addButtonClicked()
    cancelButtonClicked()
}
Class EditItemWindowController {
    scenes: SceneManager
    verify: VerifyInput
    nameBox: TextField
    serialBox: TextField
    valueBox: TextField
    errorText: Text

    editButtonClicked()
    cancelButtonClicked()
}
Class SearchItemWindowController {
    scenes: SceneManager
    searchBox: TextField
    dropBox: ChoiceBox
    searchChoiceList: ObservableList<String>

    initialize()
    searchButtonClicked()
    cancelButtonClicked()
}
Class FileManager {
    saveFile(ObservableList, File, String)
    saveTSV(ObservableList, File)
    saveHTML(ObservableList, File)
    saveJSON(ObservableList, File)
    loadFile(File, String)
    loadTSV(File)
    loadHTML(File)
    loadJSON(File)
}
Class VerifyInput {
    inventory: ObservableList<InventoryItem>

    verifyInput(String, String, String, String)
    verifyValue(String)
    verifySerial(String)
    serialCheck(String, String)
    verifyName(String)
}
Class InventoryModel {
    inventory: ObservableList<InventoryItem>
    tableInventory: ObservableList<InventoryItem>
    selectedIndex: int

    addItem(String, String, String)
    editItem(String, String, String)
    removeItem()
    searchInventory(int, String)
}
Class InventoryItem {
    value: SimpleDoubleProperty
    serial: SimpleStringProperty
    name: SimpleStringProperty

    getValue()
    getSerial()
    getName()
}
@enduml